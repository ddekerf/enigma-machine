name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Install dotnet-format (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if (-not (Get-Command "dotnet-format" -ErrorAction SilentlyContinue)) {
            dotnet tool install -g dotnet-format
          } else {
            dotnet tool update -g dotnet-format
          }
      - name: Install dotnet-format (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          dotnet tool update -g dotnet-format || dotnet tool install -g dotnet-format
          echo "$HOME/.dotnet/tools" >> "$GITHUB_PATH"
      - name: Verify analyzers (Windows only)
        if: runner.os == 'Windows'
        run: dotnet format analyzers --verify-no-changes --verbosity minimal
      - name: Test with coverage (XPlat collector)
        run: >-
          dotnet test --configuration Release --no-build --nologo -v minimal
          --collect "XPlat Code Coverage"
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura
      - name: Publish coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: '**/TestResults/**/*.cobertura.xml'
